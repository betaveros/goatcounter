<pre>&lt;script&gt;
	(function() {
		var script = document.createElement('script');
		window.counter = 'https://{{.Site.Code}}.{{.Domain}}/count'
		script.async = 1;
		script.src = '//{{.Static}}/count.min.js';

		var ins = document.getElementsByTagName('script')[0];
		ins.parentNode.insertBefore(script, ins)
	})();
&lt;/script&gt;</pre>

{{if eq .Path "/settings"}}
<p>You can optionally pass variables manually by using the <code>vars</code> object. Supported keys:</p>

<ul>
	<li><code>path</code> – Path to the current page that's recorded, without
		domain (e.g. <code>/path/page.html</code>).</li>

	<li><code>referrer</code> – Referrer value; can be URL
		(<code>https://example.com</code>) or any string
		(<code>June Newsletter</code>). Default is to use the Referer
		header.</li>
</ul>

<p>The default value will be used if the value is <code>null</code> or
<code>undefined</code> (but <em>not</em> on empty string!) The value can be used
as a callback too: the default value is passed and the return is used. The view
will be ignored if the return value from the <code>path</code> callback is
<code>null</code>.</p>

<p>Example:</p>

<pre>window.vars = {
	path: function(p) {
		// Don't track the home page.
		if (p === '/')
			return null;
		// Remove .html from all other page links.
		else
			return p.replace(/\.html$/, '');
	},

	// Very simplistic method to get referrer from URL (e.g. ?ref=Newsletter)
	referrer: (window.location.search ? window.location.search.split('=')[1] : null),
};</pre>

{{end}}
